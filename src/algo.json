{
  "results": [
    {
      "name": "Rotational Cipher",
      "functionName": "rotationalCipher",
      "args": "Zebra-493,3",
      "template": "/src/files/rotational-cipher.html"
    },
    {
      "name": "Contiguous Subarrays",
      "functionName": "countSubarrays",
      "args": {
        "param1": [
          3,
          4,
          1,
          6,
          2
        ]
      },
      "template": "/src/files/contiguous-subarrays.html"
    },
    {
      "name": "Pair Sums",
      "functionName": "pairSums",
      "args": {
        "param1": [
          1,
          5,
          3,
          3,
          3
        ],
        "param2": 6
      },
      "template": "/src/files/pair-sums.html"
    },
    {
      "name": "Reverse to Make Equal",
      "functionName": "areTheyEqual",
      "args": {
        "param1": [
          1,
          2,
          3,
          4
        ],
        "param2": [
          1,
          4,
          3,
          2
        ]
      },
      "template": "/src/files/rev-arr-equal.html"
    },
    {
      "name": "Passing Yearbooks",
      "functionName": "findSignatureCounts",
      "args": {
        "param1": [
          2,
          1
        ]
      },
      "template": "/src/files/passing-yearbooks.html"
    },
    {
      "name": "Matching Pairs",
      "functionName": "matchingPairs",
      "args": {
        "param1": "abcd",
        "param2": "adcb"
      },
      "template": "/src/files/matching-pairs.html"
    },
    {
      "name": "Minimum Length Substrings",
      "functionName": "minLengthSubstring",
      "args": {
        "param1": "cdbefedbce",
        "param2": "fd"
      },
      "template": "/src/files/min-length-substring.html"
    },
    {
      "name": "172. Factorial Trailing Zeroes",
      "functionName": "trailingZeroes",
      "args": {
        "param1": 5
      },
      "template": "/src/files/fact_trailing-zero.html"
    },
    {
      "name": "50. Pow(x, n)",
      "functionName": "myPow",
      "args": {
        "param1": 2,
        "param2": -2
      },
      "template": "/src/files/my_pow.html"
    },
    {
      "name": "14. Longest Common Prefix",
      "functionName": "longestCommonPrefix",
      "args": {
        "param1": [
          "flower",
          "flow",
          "flight"
        ]
      },
      "template": "/src/files/longest-common-prefix.html"
    },
    {
      "name": "151. Reverse Words in a String",
      "functionName": "reverseWords",
      "args": {
        "param1": "the sky is blue"
      },
      "template": "/src/files/reverse-words.html"
    },
    {
      "name": "5. Longest Palindromic Substring",
      "functionName": "longestPalindrome",
      "args": {
        "param1": "babad"
      },
      "template": "/src/files/longest-palindrome.html"
    },
    {
      "name": "3. Longest Substring Without Repeating Characters",
      "functionName": "lengthOfLongestSubstring",
      "args": {
        "param1": "babad"
      },
      "template": "/src/files/length-of-longest-substring.html"
    },
    {
      "name": "20. Valid Parentheses",
      "functionName": "hasValidParentheses",
      "args": {
        "param1": "([])"
      },
      "template": "/src/files/has-valid-parentheses.html"
    },
    {
      "name": "394. Decode String",
      "functionName": "decodeString",
      "args": {
        "param1": "3[a]2[bc]"
      },
      "template": "/src/files/decode-string.html"
    },
    {
      "name": "139. Word Break",
      "functionName": "wordBreak",
      "args": {
        "param1": "catsandog",
        "param2": ["cats","dog","sand","and","cat"]
      },
      "template": "/src/files/word-break.html"
    },
    {
      "name": "242. Valid Anagram",
      "functionName": "isAnagram",
      "args": {
        "param1": "anagram",
        "param2": "nagaram"
      },
      "template": "/src/files/is-anagram.html"
    },
    {
      "name": "187. Repeated DNA Sequences",
      "functionName": "findRepeatedDnaSequences",
      "args": {
        "param1": "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
      },
      "template": "/src/files/find-repeateddna-sequences.html"
    },
    {
      "name": "273. Integer to English Words",
      "functionName": "numberToWords",
      "args": {
        "param1": 1234567
      },
      "template": "/src/files/number-to-words.html"
    },
    {
      "name": "1. Two Sum",
      "functionName": "twoSum",
      "args": {
        "param1": [2,7,11,15],
        "param2": 9
      },
      "template": "/src/files/two-sum.html"
    },
    {
      "name": "75. Sort Colors",
      "functionName": "sortColors",
      "args": {
        "param1": [2,0,2,1,1,0]
      },
      "template": "/src/files/sort-colors.html"
    },
    {
      "name": "88. Merge Sorted Array",
      "functionName": "mergeSortedArray",
      "args": {
        "param1": [1,2,3,0,0,0],
        "param2": 3,
        "param3": [2,5,6],
        "param4": 3
      },
      "template": "/src/files/merge-sorted-array.html"
    },
    {
      "name": "66. Plus One",
      "functionName": "plusOne",
      "args": {
        "param1": [1,2,3]
      },
      "template": "/src/files/plus-one.html"
    }
  ]
}